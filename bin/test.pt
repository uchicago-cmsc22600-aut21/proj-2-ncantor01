(Prog (BindFun intToString ((PatVar i))
               (ExpIf (ExpBin (ExpVar i) < (ExpInt 0))
                      (ExpBin (ExpStr "-") ^ (ExpApp (ExpVar intToString) (ExpUn - (ExpVar i))))
                      (ExpIf (ExpBin (ExpVar i) == (ExpInt 0)) (ExpStr "0")
                             (ExpIf (ExpBin (ExpVar i) == (ExpInt 1)) (ExpStr "1")
                                    (ExpIf (ExpBin (ExpVar i) == (ExpInt 2)) (ExpStr "2")
                                           (ExpIf (ExpBin (ExpVar i) == (ExpInt 3)) (ExpStr "3")
                                                  (ExpIf (ExpBin (ExpVar i) == (ExpInt 4)) (ExpStr "4")
                                                         (ExpIf (ExpBin (ExpVar i) == (ExpInt 5)) (ExpStr "5")
                                                                (ExpIf (ExpBin (ExpVar i) == (ExpInt 6)) (ExpStr "6")
                                                                       (ExpIf (ExpBin (ExpVar i) == (ExpInt 7))
                                                                              (ExpStr "7")
                                                                              (ExpIf (ExpBin (ExpVar i) == (ExpInt 8))
                                                                                     (ExpStr "8")
                                                                                     (ExpIf (ExpBin (ExpVar i) ==
                                                                                                    (ExpInt 9))
                                                                                            (ExpStr "9")
                                                                                            (ExpBin (ExpApp (ExpVar intToString)
                                                                                                            (ExpBin (ExpVar i)
                                                                                                                    /
                                                                                                                    (ExpInt 10)))
                                                                                                    ^
                                                                                                    (ExpApp (ExpVar intToString)
                                                                                                            (ExpBin (ExpVar i)
                                                                                                                    %
                                                                                                                    (ExpInt 10))))))))))))))))
      (BindFun foldl ((PatVar f) (PatVar b) (PatVar l))
               (ExpCase (ExpVar l)
                        ((RuleCase (PatCon Nil) (SCOPE () (ExpVar b))) (RuleCase (PatListCons (PatVar hd) (PatVar tl))
                                                                                 (SCOPE ()
                                                                                        (ExpApp (ExpApp (ExpApp (ExpVar foldl)
                                                                                                                (ExpVar f))
                                                                                                        (ExpApp (ExpApp (ExpVar f)
                                                                                                                       (ExpVar hd))
                                                                                                                (ExpVar b)))
                                                                                                (ExpVar tl)))))))
      (BindFun rev ((PatVar xs))
               (SCOPE ((BindFun cons ((PatVar hd) (PatVar tl)) (ExpListCons (ExpVar hd) (ExpVar tl))))
                      (ExpApp (ExpApp (ExpApp (ExpVar foldl) (ExpVar cons)) (ExpCon Nil)) (ExpVar xs))))
      (BindFun tabulate ((PatTuple (PatVar n) (PatVar f)))
               (SCOPE ((BindFun loop ((PatTuple (PatVar i) (PatVar acc)))
                                (ExpIf (ExpBin (ExpVar i) <= (ExpVar n))
                                       (ExpApp (ExpApp (ExpVar loop) (ExpBin (ExpVar i) + (ExpInt 1)))
                                               (ExpListCons (ExpApp (ExpVar f) (ExpVar i)) (ExpVar acc)))
                                       (ExpApp (ExpVar rev) (ExpVar acc)))))
                      (ExpIf (ExpBin (ExpVar n) < (ExpInt 0)) (ExpApp (ExpVar fail) (ExpStr "tabulate: n < 0"))
                             (ExpApp (ExpVar loop) (ExpTuple (ExpInt 0) (ExpCon Nil))))))
      (BindVal (PatVar n) (ExpInt 4999))
      (BindVal (PatVar sum_n)
               (SCOPE ((BindFun f ((PatVar x) (PatVar y)) (ExpBin (ExpVar x) + (ExpVar y))) (BindFun g ((PatVar i))
                                                                                                     (ExpVar i)))
                      (ExpApp (ExpApp (ExpApp (ExpVar foldl) (ExpVar f)) (ExpInt 0))
                              (ExpApp (ExpVar tabulate) (ExpTuple (ExpVar n) (ExpVar g))))))
      (BindExp (ExpApp (ExpVar print) (ExpStr "foldl \n")))
      (BindExp (ExpApp (ExpVar print) (ExpStr "      (fn x y => x + y)\n")))
      (BindExp (ExpApp (ExpVar print) (ExpStr "      0 (tabulate (")))
      (BindExp (ExpApp (ExpVar print) (ExpApp (ExpVar intToString) (ExpVar n))))
      (BindExp (ExpApp (ExpVar print) (ExpStr ", (fn i => i))) = ")))
      (BindExp (ExpApp (ExpVar print) (ExpApp (ExpVar intToString) (ExpVar sum_n))))
      (BindExp (ExpApp (ExpVar print) (ExpStr "\n"))) (ExpTuple))

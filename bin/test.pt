(Prog (BindFun fst ((PatVar p)) (ExpCase (ExpVar p) ((RuleCase (PatTuple (PatVar a) PatWild) (SCOPE () (ExpVar a))))))
      (BindFun snd ((PatVar p)) (ExpCase (ExpVar p) ((RuleCase (PatTuple PatWild (PatVar b)) (SCOPE () (ExpVar b))))))
      (BindFun length ((PatVar l))
               (ExpCase (ExpVar l)
                        ((RuleCase (PatCon Nil) (SCOPE () (ExpInt 0))) (RuleCase (PatListCons PatWild (PatVar r))
                                                                                 (SCOPE ()
                                                                                        (ExpBin (ExpInt 1) +
                                                                                                (ExpApp (ExpVar length)
                                                                                                        (ExpVar r))))))))
      (BindFun appi ((PatVar f) (PatVar l))
               (SCOPE ((BindFun appf ((PatVar arg))
                                (ExpCase (ExpApp (ExpVar snd) (ExpVar arg))
                                         ((RuleCase (PatCon Nil) (SCOPE () (ExpTuple))) (RuleCase (PatListCons (PatVar x)
                                                                                                               (PatVar xs))
                                                                                                  (SCOPE ((BindVal (PatVar i)
                                                                                                                   (ExpApp (ExpVar fst)
                                                                                                                       (ExpVar arg))) (BindExp (ExpApp (ExpVar f)
                                                                                                                       (ExpTuple (ExpVar i)
                                                                                                                       (ExpVar x)))))
                                                                                                         (ExpApp (ExpVar appf)
                                                                                                                 (ExpTuple (ExpBin (ExpVar i)
                                                                                                                       +
                                                                                                                       (ExpInt 1))
                                                                                                                       (ExpVar xs)))))))))
                      (ExpApp (ExpVar appf) (ExpTuple (ExpInt 0) (ExpVar l)))))
      (BindFun intToString ((PatVar i))
               (ExpIf (ExpBin (ExpVar i) < (ExpInt 0))
                      (ExpBin (ExpStr "-") ^ (ExpApp (ExpVar intToString) (ExpUn - (ExpVar i))))
                      (ExpIf (ExpBin (ExpVar i) == (ExpInt 0)) (ExpStr "0")
                             (ExpIf (ExpBin (ExpVar i) == (ExpInt 1)) (ExpStr "1")
                                    (ExpIf (ExpBin (ExpVar i) == (ExpInt 2)) (ExpStr "2")
                                           (ExpIf (ExpBin (ExpVar i) == (ExpInt 3)) (ExpStr "3")
                                                  (ExpIf (ExpBin (ExpVar i) == (ExpInt 4)) (ExpStr "4")
                                                         (ExpIf (ExpBin (ExpVar i) == (ExpInt 5)) (ExpStr "5")
                                                                (ExpIf (ExpBin (ExpVar i) == (ExpInt 6)) (ExpStr "6")
                                                                       (ExpIf (ExpBin (ExpVar i) == (ExpInt 7))
                                                                              (ExpStr "7")
                                                                              (ExpIf (ExpBin (ExpVar i) == (ExpInt 8))
                                                                                     (ExpStr "8")
                                                                                     (ExpIf (ExpBin (ExpVar i) ==
                                                                                                    (ExpInt 9))
                                                                                            (ExpStr "9")
                                                                                            (ExpBin (ExpApp (ExpVar intToString)
                                                                                                            (ExpBin (ExpVar i)
                                                                                                                    /
                                                                                                                    (ExpInt 10)))
                                                                                                    ^
                                                                                                    (ExpApp (ExpVar intToString)
                                                                                                            (ExpBin (ExpVar i)
                                                                                                                    %
                                                                                                                    (ExpInt 10))))))))))))))))
      (BindFun printArg ((PatVar arg))
               (SCOPE ((BindExp (ExpApp (ExpVar print) (ExpStr "arg "))) (BindExp (ExpApp (ExpVar print)
                                                                                          (ExpApp (ExpVar intToString)
                                                                                                  (ExpApp (ExpVar fst)
                                                                                                          (ExpVar arg)))))
                                                                         (BindExp (ExpApp (ExpVar print)
                                                                                          (ExpStr " = ")))
                                                                         (BindExp (ExpApp (ExpVar print)
                                                                                          (ExpApp (ExpVar snd)
                                                                                                  (ExpVar arg)))))
                      (ExpApp (ExpVar print) (ExpStr "\n"))))
      (BindVal (PatVar args) (ExpApp (ExpVar arguments) (ExpTuple)))
      (BindVal (PatVar nArgs) (ExpApp (ExpVar length) (ExpVar args)))
      (BindVal PatWild
               (ExpApp (ExpVar print)
                       (ExpBin (ExpBin (ExpStr "# args = ") ^ (ExpApp (ExpVar intToString) (ExpVar nArgs))) ^
                               (ExpStr "\n")))) (ExpApp (ExpApp (ExpVar appi) (ExpVar printArg)) (ExpVar args)))
